{"ast":null,"code":"import { PAGINATION_QUERY } from '../components/Pagination';\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read: function read() {\n      var _data$_allProductsMet;\n\n      var exsisting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      var skip = args.skip,\n          first = args.first;\n      var data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      console.log(data);\n      var count = (_data$_allProductsMet = data._allProductsMeta) === null || _data$_allProductsMet === void 0 ? void 0 : _data$_allProductsMet.count;\n      var page = skip / frist + 1;\n      var pages = Math.ceil(count / first);\n      var items = exsisting.slice(skip, skip + first).filter(function (x) {\n        return x;\n      });\n\n      if (items.length !== first) {\n        return false;\n      }\n\n      if (items.length) {\n        console.log(\"There are \".concat(items.length, \" items in the cache\"));\n        return items;\n      }\n    },\n    merge: function merge() {}\n  };\n}","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","exsisting","args","cache","skip","first","data","readQuery","query","console","log","count","_allProductsMeta","page","frist","pages","Math","ceil","items","slice","filter","x","length","merge"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,eAAT,GAA0B;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAE,KADN;AAGHC,IAAAA,IAHG,kBAGkC;AAAA;;AAAA,UAAhCC,SAAgC,uEAApB,EAAoB;;AAAA;AAAA,UAAdC,IAAc,QAAdA,IAAc;AAAA,UAARC,KAAQ,QAARA,KAAQ;;AAAA,UAC1BC,IAD0B,GACXF,IADW,CAC1BE,IAD0B;AAAA,UACpBC,KADoB,GACXH,IADW,CACpBG,KADoB;AAEjC,UAAMC,IAAI,GAAGH,KAAK,CAACI,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAhB,CAAb;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,KAAK,4BAAGL,IAAI,CAACM,gBAAR,0DAAG,sBAAuBD,KAArC;AACA,UAAME,IAAI,GAAGT,IAAI,GAAGU,KAAP,GAAe,CAA5B;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,GAAGN,KAAlB,CAAd;AACA,UAAMa,KAAK,GAAGjB,SAAS,CAACkB,KAAV,CAAgBf,IAAhB,EAAsBA,IAAI,GAAGC,KAA7B,EAAoCe,MAApC,CAA4C,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OAA7C,CAAd;;AACA,UAAIH,KAAK,CAACI,MAAN,KAAiBjB,KAArB,EAA2B;AAEvB,eAAO,KAAP;AACH;;AAED,UAAGa,KAAK,CAACI,MAAT,EAAgB;AACZb,QAAAA,OAAO,CAACC,GAAR,qBAAyBQ,KAAK,CAACI,MAA/B;AACA,eAAOJ,KAAP;AACH;AACJ,KApBE;AAqBHK,IAAAA,KArBG,mBAqBI,CAEN;AAvBE,GAAP;AAyBH","sourcesContent":["import { PAGINATION_QUERY } from '../components/Pagination'\r\n\r\nexport default function paginationField(){\r\n    return {\r\n        keyArgs: false,\r\n\r\n        read(exsisting = [], { args, cache }){\r\n            const {skip, first} = args;\r\n            const data = cache.readQuery({ query: PAGINATION_QUERY })\r\n            console.log(data)\r\n            const count = data._allProductsMeta?.count\r\n            const page = skip / frist + 1\r\n            const pages = Math.ceil(count / first)\r\n            const items = exsisting.slice(skip, skip + first).filter( x => x)\r\n            if (items.length !== first){\r\n\r\n                return false\r\n            }\r\n\r\n            if(items.length){\r\n                console.log(`There are ${items.length} items in the cache`)\r\n                return items\r\n            }\r\n        },\r\n        merge(){\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}