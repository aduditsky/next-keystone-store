{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/adudi/[nextjs]NargoreShop/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\pages\\\\order\\\\[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ORDER_QUERY($id: ID!){\\n        order: Order(where: {id: $id}) {\\n            id,\\n            charge,\\n            total,\\n            user{\\n                id\\n            },\\n            items{\\n                id,\\n                name,\\n                description\\n                price,\\n                quantity\\n                photo{\\n                    id\\n                    image{\\n                        id\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E...\\u270C\\uD83C\\uDFFB\\uD83D\\uDE18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: {\n      error: error\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 22\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SingleOrderPage, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AAEA,IAAMC,kBAAkB,GAAGH,GAAH,mBAAxB;AA6BA,eAAe,SAASI,eAAT,OAAkC;AAAA;;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAAA,kBACdN,QAAQ,CAACI,kBAAD,EAAoB;AACvDG,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAX;AAD4C,GAApB,CADM;AAAA,MACtCC,IADsC,aACtCA,IADsC;AAAA,MAChCC,KADgC,aAChCA,KADgC;AAAA,MACzBC,OADyB,aACzBA,OADyB;;AAI7C,MAAGA,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAGD,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAALA;AAAD;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAPmC,MAQrCE,KARqC,GAQ3BH,IAR2B,CAQrCG,KARqC;AAS7C,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAZuBP,e;UACWL,Q;;;KADXK,e","sourcesContent":["import { useQuery } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport ErrorMessage from '../../components/ErrorMessage'\r\nimport OrderStyles from '../../components/styles/OrderStyles'\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!){\r\n        order: Order(where: {id: $id}) {\r\n            id,\r\n            charge,\r\n            total,\r\n            user{\r\n                id\r\n            },\r\n            items{\r\n                id,\r\n                name,\r\n                description\r\n                price,\r\n                quantity\r\n                photo{\r\n                    id\r\n                    image{\r\n                        id\r\n                        publicUrlTransformed\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n`\r\n\r\n\r\nexport default function SingleOrderPage({query}) {\r\n    const {data, error, loading} = useQuery(SINGLE_ORDER_QUERY,{\r\n        variables: {id: query.id}\r\n    })\r\n    if(loading){\r\n        return <p>–ó–∞–≥—Ä—É–∂–∞—é...‚úåüèªüòò</p>\r\n    }\r\n    if(error) return <ErrorMessage error={{error}} />\r\n    const { order } = data;\r\n    return <OrderStyles>\r\n\r\n    </OrderStyles>\r\n}"]},"metadata":{},"sourceType":"module"}