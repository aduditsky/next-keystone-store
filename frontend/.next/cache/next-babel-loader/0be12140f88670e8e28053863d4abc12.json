{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\components\\\\Products.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { perPage } from \"../config\";\nimport Product from \"./Product\";\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n        allProducts(first: $first, skip: $skip){\n        id\n        name\n        price\n        description\n        photo{\n        id\n        image{\n            publicUrlTransformed\n        }\n            }\n        }\n    }\n`;\nconst ProductListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-gap:15px;\"]);\nexport default function Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage,\n      first: 1\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u0435\\u043C...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductListStyles, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductListStyles","div","Products","page","data","error","loading","variables","skip","first","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMK,iBAAiB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,yEAAvB;AAMA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AAErC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBZ,QAAQ,CAACK,kBAAD,EAAqB;AACxDQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,IAAI,GAAIN,OADP;AAEPY,MAAAA,KAAK,EAAE;AAFA;AAD6C,GAArB,CAAvC;AAMA,MAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,yDAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA,2BACI,QAAC,iBAAD;AAAA,gBAEKD,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqBC,OAAO,iBAAI,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cAAhC;AAFL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import { useQuery } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport styled from \"styled-components\";\r\nimport { perPage } from \"../config\";\r\nimport Product from \"./Product\";\r\n\r\nexport const ALL_PRODUCTS_QUERY = gql`\r\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\r\n        allProducts(first: $first, skip: $skip){\r\n        id\r\n        name\r\n        price\r\n        description\r\n        photo{\r\n        id\r\n        image{\r\n            publicUrlTransformed\r\n        }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst ProductListStyles = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 15px;\r\n`\r\n\r\nexport default function Products({page}) {\r\n\r\n    const {data, error, loading} = useQuery(ALL_PRODUCTS_QUERY, {\r\n        variables: {\r\n            skip: page  * perPage,\r\n            first: 1,\r\n        }\r\n    });\r\n    if (loading) return <p>Загружаем...</p>\r\n    if (error) return <p>Ошибка: {error}</p>\r\n    return(\r\n        <div>\r\n            <ProductListStyles>\r\n\r\n                {data.allProducts.map(product => <Product key={product.id} product={product} />)}\r\n\r\n            </ProductListStyles>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}