{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport { debounce } from 'lodash';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\n        searchTerms: allProducts(\n            where: {\n                OR: [\n                    {name_contains_i: $searchTerm},\n                    {description_contains_i: $searchTerm}\n                ]\n            }\n        ){\n            id\n            name\n            photo{\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nexport default function Search() {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {}\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Поиск...',\n        className: loading ? `loading` : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps), {}, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item\n      })), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.name,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), item.name]\n      }), item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","findItems","loading","data","error","fetchPolicy","items","searchTerms","findItemsButChill","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","onInputValueChange","variables","searchTerm","onSelectedItemChange","type","placeholder","className","map","item","photo","image","publicUrlTransformed","name","id"],"mappings":";;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,SAASM,MAAT,GAAiB;AAC7B,QAAM,CAACC,SAAD,EAAY;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAAZ,IAAuCb,YAAY,CAACQ,qBAAD,EAAwB;AAC7EM,IAAAA,WAAW,EAAE;AADgE,GAAxB,CAAzD;AAGA,QAAMC,KAAK,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,WAAN,KAAqB,EAAnC;AACA,QAAMC,iBAAiB,GAAGb,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AACCT,EAAAA,cAAc;AACf,QAAM;AAAEiB,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,aAA5B;AAA2CC,IAAAA,gBAA3C;AAA6DC,IAAAA;AAA7D,MAA6EpB,WAAW,CAAC;AAC3Fa,IAAAA,KAAK,EAAE,EADoF;;AAE3FQ,IAAAA,kBAAkB,GAAG;AACpBN,MAAAA,iBAAiB,CAAC;AACdO,QAAAA,SAAS,EAAC;AACNC,UAAAA,UAAU,EAAEP;AADN;AADI,OAAD,CAAjB;AAKA,KAR0F;;AAS3FQ,IAAAA,oBAAoB,GAAE,CAErB;;AAX0F,GAAD,CAA9F;AAaA,sBAAO,QAAC,YAAD;AAAA,4BACF,+CAASL,gBAAgB,EAAzB;AAAA,6BACI,mCAAWD,aAAa,CAAC;AACrBO,QAAAA,IAAI,EAAE,QADe;AAErBC,QAAAA,WAAW,EAAE,UAFQ;AAGrBC,QAAAA,SAAS,EAAElB,OAAO,GAAI,SAAJ,GAAe;AAHZ,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADE,eAQF,QAAC,QAAD,kCAAcQ,YAAd;AAAA,gBACKJ,KAAK,CAACe,GAAN,CAAWC,IAAD,iBAAU,QAAC,YAAD,kCAAgCT,YAAY,CAAC;AAACS,QAAAA;AAAD,OAAD,CAA5C;AAAA,gCACjB;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,oBAA3B;AAAiD,UAAA,GAAG,EAAEH,IAAI,CAACI,IAA3D;AAAiE,UAAA,KAAK,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADiB,EAEhBJ,IAAI,CAACI,IAFW;AAAA,UAAmBJ,IAAI,CAACK,EAAxB;AAAA;AAAA;AAAA;AAAA,cAApB;AADL;AAAA;AAAA;AAAA;AAAA,YARE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcF","sourcesContent":["import { useLazyQuery } from '@apollo/client';\r\nimport { resetIdCounter, useCombobox } from 'downshift'\r\nimport gql from 'graphql-tag';\r\nimport { debounce } from 'lodash';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'\r\n\r\nconst SEARCH_PRODUCTS_QUERY = gql`\r\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String!){\r\n        searchTerms: allProducts(\r\n            where: {\r\n                OR: [\r\n                    {name_contains_i: $searchTerm},\r\n                    {description_contains_i: $searchTerm}\r\n                ]\r\n            }\r\n        ){\r\n            id\r\n            name\r\n            photo{\r\n                image{\r\n                    publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Search(){\r\n   const [findItems, {loading, data, error} ] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\r\n       fetchPolicy: 'no-cache'\r\n   })\r\n   const items = data?.searchTerms || []\r\n   const findItemsButChill = debounce(findItems, 350)\r\n    resetIdCounter();\r\n   const { inputValue, getMenuProps, getInputProps, getComboboxProps, getItemProps} = useCombobox({\r\n       items: [],\r\n       onInputValueChange() {\r\n        findItemsButChill({\r\n            variables:{\r\n                searchTerm: inputValue,\r\n            }\r\n        });\r\n       },\r\n       onSelectedItemChange(){\r\n\r\n       }\r\n   })\r\n   return <SearchStyles>\r\n        <div {...getComboboxProps()}>\r\n            <input {...getInputProps({\r\n                type: 'search',\r\n                placeholder: 'Поиск...',\r\n                className: loading ? `loading` : '',\r\n            })} />\r\n        </div>\r\n        <DropDown {...getMenuProps}>\r\n            {items.map((item) => <DropDownItem key={item.id} {...getItemProps({item})}>\r\n                <img src={item.photo.image.publicUrlTransformed} alt={item.name} width={50} />\r\n                {item.name}</DropDownItem>)}\r\n        </DropDown>\r\n    </SearchStyles>\r\n}"]},"metadata":{},"sourceType":"module"}