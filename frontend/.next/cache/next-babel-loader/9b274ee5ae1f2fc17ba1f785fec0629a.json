{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/adudi/[nextjs]NargoreShop/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery{\\n  authenticatedItem{\\n  \\t... on User {\\n      id\\n      email\\n      name\\n      cart{\\n        id\\n        quantity\\n        product {\\n          id\\n          name\\n          description\\n          price\\n          photo{\\n            image{\\n              publicUrlTransformed\\n            }\\n          }\\n        }\\n      }\\n      # TODO: Query the cart once we have it\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nexport var CURRENT_USER_QUERY = gql(_templateObject());\n\nvar useUser = function useUser() {\n  _s();\n\n  var _useQuery = useQuery(CURRENT_USER_QUERY),\n      data = _useQuery.data;\n\n  return data === null || data === void 0 ? void 0 : data.authenticatedItem;\n};\n\n_s(useUser, \"wDefygpsWBVTl/fEL2emlq2/574=\", false, function () {\n  return [useQuery];\n});\n\nexport { useUser };","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/User.js"],"names":["gql","useQuery","CURRENT_USER_QUERY","useUser","data","authenticatedItem"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,OAAO,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;;AA4BP,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACHF,QAAQ,CAACC,kBAAD,CADL;AAAA,MACXE,IADW,aACXA,IADW;;AAElB,SAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEC,iBAAb;AACH,CAHD;;GAAMF,O;UACaF,Q;;;AAInB,SAASE,OAAT","sourcesContent":["import { gql, useQuery } from '@apollo/client'\r\n\r\nexport const CURRENT_USER_QUERY = gql`\r\nquery{\r\n  authenticatedItem{\r\n  \t... on User {\r\n      id\r\n      email\r\n      name\r\n      cart{\r\n        id\r\n        quantity\r\n        product {\r\n          id\r\n          name\r\n          description\r\n          price\r\n          photo{\r\n            image{\r\n              publicUrlTransformed\r\n            }\r\n          }\r\n        }\r\n      }\r\n      # TODO: Query the cart once we have it\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst useUser = () => {\r\n    const {data} = useQuery(CURRENT_USER_QUERY)\r\n    return data?.authenticatedItem\r\n}\r\n\r\nexport { useUser }\r\n"]},"metadata":{},"sourceType":"module"}