{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\lib\\\\cartState.js\";\nimport { useContext, createContext, useState } from \"react\";\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // This is our own custom provider\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      setCartOpen,\n      toggleCart,\n      closeCart,\n      openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n} //make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/lib/cartState.js"],"names":["useContext","createContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGF,aAAa,EAAvC;AACA,MAAMG,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAACC,EAAAA;AAAD,CAA3B,EAAsC;AAClC;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASQ,UAAT,GAAqB;AACjBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASG,SAAT,GAAoB;AAChBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,WAASG,QAAT,GAAmB;AACfH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAGD,sBAAO,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAD;AAAWC,MAAAA,WAAX;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA,SAApC;AAA+CC,MAAAA;AAA/C,KAA3B;AAAA,cAAuFL;AAAvF;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;;;AACA,SAASM,OAAT,GAAkB;AACd,QAAMC,GAAG,GAAGd,UAAU,CAACG,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACH;;AAED,SAAQR,iBAAR,EAA2BO,OAA3B","sourcesContent":["import { useContext, createContext, useState } from \"react\";\r\n\r\nconst LocalStateContext = createContext();\r\nconst LocalStateProvider = LocalStateContext.Provider;\r\n\r\nfunction CartStateProvider({children}){\r\n    // This is our own custom provider\r\n    \r\n    const [cartOpen, setCartOpen] = useState(false)\r\n\r\n    function toggleCart(){\r\n        setCartOpen(!cartOpen)\r\n    }\r\n\r\n    function closeCart(){\r\n        setCartOpen(false)\r\n    }\r\n\r\n    function openCart(){\r\n        setCartOpen(true)\r\n    }\r\n\r\n\r\n    return <LocalStateProvider value={{cartOpen, setCartOpen, toggleCart, closeCart, openCart }}>{children}</LocalStateProvider>\r\n}\r\n\r\n//make a custom hook for accessing the cart local state\r\nfunction useCart(){\r\n    const all = useContext(LocalStateContext)\r\n    return all\r\n}\r\n\r\nexport {CartStateProvider, useCart};"]},"metadata":{},"sourceType":"module"}