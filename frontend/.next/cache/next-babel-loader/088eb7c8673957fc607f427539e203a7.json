{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/adudi/[nextjs]NargoreShop/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/adudi/[nextjs]NargoreShop/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/adudi/[nextjs]NargoreShop/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/adudi/[nextjs]NargoreShop/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION(\\n        $id: ID!\\n        $name: String\\n        $description: String\\n        $price: Int\\n    ){\\n        UpdateProduct(\\n            id: $id,\\n            data: {\\n                id: $id,\\n                name: $name,\\n                description: $description,\\n                price: $price,\\n            }\\n        ){\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_PRODUCT_QUERY($id: ID!){\\n        Product(where: {id: $id}){\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  // 1. Получить сущевствующий товар\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this); // 2. Получить зависимость для обновления товара\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading; // 2.5 Создать импорт useForm\n\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm; // 3. Нужно форму, что отслеживает обновления товара\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct({\n                  variables: {\n                    id: id,\n                    data: inputs\n                  }\n                })[\"catch\"](error);\n\n              case 3:\n                res = _context.sent;\n                console.log(res); // TODO: Handle Submit\n                // const res = await createProduct()\n                // clearForm()\n                // //Go to that product's page\n                // Router.push({\n                //     pathname: `/product/${res.data.createProduct.id}`,\n                // })\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"\\u0426\\u0435\\u043D\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"\\u0426\\u0435\\u043D\\u0430\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"number\",\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"\\u0411\\u0430\\u0437\\u043E\\u0432\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"Fqm313LZXXi/VcAteD3KWE9RgtQ=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading","Product","inputs","handleChange","clearForm","resetForm","e","preventDefault","res","console","log","name","price","description"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport useForm from \"../lib/useForm\"\r\nimport DisplayError from \"./ErrorMessage\"\r\nimport Form from \"./styles/Form\"\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n    query SINGLE_PRODUCT_QUERY($id: ID!){\r\n        Product(where: {id: $id}){\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n    mutation UPDATE_PRODUCT_MUTATION(\r\n        $id: ID!\r\n        $name: String\r\n        $description: String\r\n        $price: Int\r\n    ){\r\n        UpdateProduct(\r\n            id: $id,\r\n            data: {\r\n                id: $id,\r\n                name: $name,\r\n                description: $description,\r\n                price: $price,\r\n            }\r\n        ){\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\n\r\nexport default function UpdateProduct({id}) {\r\n    // 1. Получить сущевствующий товар\r\n    const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n        variables: {id},\r\n    })\r\n\r\n    if (loading) return <p>Загружаю...</p>\r\n\r\n    // 2. Получить зависимость для обновления товара\r\n    const [updateProduct, {data: updateData, error: updateError, loading: updateLoading}] = useMutation(UPDATE_PRODUCT_MUTATION)\r\n    // 2.5 Создать импорт useForm\r\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product)\r\n    // 3. Нужно форму, что отслеживает обновления товара\r\n    return (\r\n        <Form onSubmit={ async (e) => {\r\n            e.preventDefault()\r\n            const res = await updateProduct({\r\n                variables: {\r\n                    id: id,\r\n                    data: inputs\r\n                }\r\n            }).catch(error)\r\n            console.log(res);\r\n            // TODO: Handle Submit\r\n\r\n\r\n            // const res = await createProduct()\r\n            // clearForm()\r\n            // //Go to that product's page\r\n            // Router.push({\r\n            //     pathname: `/product/${res.data.createProduct.id}`,\r\n            // })\r\n\r\n        }}>\r\n            <DisplayError error={error || updateError} />\r\n            <fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n                <label htmlFor='name'>\r\n                    Название\r\n                    <input type='text' id='name' name='name' placeholder='Имя' value={inputs.name} onChange={handleChange}/>\r\n                </label>\r\n                <label htmlFor='price'>\r\n                    Цена\r\n                    <input type='number' id='price' name='price' placeholder='Цена' value={inputs.price} onChange={handleChange}/>\r\n                </label>\r\n                <label htmlFor='description'>\r\n                    Описание\r\n                    <textarea type='number' id='description' name='description' placeholder='Базовое описание' value={inputs.description} onChange={handleChange} />\r\n                </label>\r\n\r\n                {/* <button type='button' onClick={clearForm}>Очистить</button>\r\n                <button type='button' onClick={resetForm}>Вернуть</button> */}\r\n\r\n                <button type='submit'>Изменить товар</button>\r\n            </fieldset>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}