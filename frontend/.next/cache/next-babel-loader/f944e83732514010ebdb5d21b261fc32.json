{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\components\\\\SignIn.js\";\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\nconst SIGNIN_MUTATION = gql`\nmutation SIGNIN_MUTATION($email: String!, $password: String!){\n    authenticateUserWithPassword(email: $email, password: $password){\n        ... on UserAuthenticationWithPasswordSuccess{\n            item{\n                id\n                email\n                name\n            }\n        }\n        ... on UserAuthenticationWithPasswordFailure{\n            code\n            message\n        }\n    }\n}\n`;\n\nconst SignIn = () => {\n  var _data$authenticateUse;\n\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [signin, {\n    data,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // Send the email and password to the\n\n    const res = await signin(); // console.log(res)\n\n    resetForm();\n  }\n\n  const error = (data === null || data === void 0 ? void 0 : (_data$authenticateUse = data.authenticateUserWithPassword) === null || _data$authenticateUse === void 0 ? void 0 : _data$authenticateUse.__typename) === 'UserAuthenticationWithPasswordFailure' ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0432\\u0430\\u0448 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"\\u0412\\u0430\\u0448 E-mail\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/SignIn.js"],"names":["Form","useForm","gql","useMutation","CURRENT_USER_QUERY","Error","SIGNIN_MUTATION","SignIn","inputs","handleChange","resetForm","email","password","signin","data","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","res","error","authenticateUserWithPassword","__typename","undefined"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,eAAe,GAAGJ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAMK,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCT,OAAO,CAAC;AAChDU,IAAAA,KAAK,EAAE,EADyC;AAEhDC,IAAAA,QAAQ,EAAE;AAFsC,GAAD,CAAnD;AAIA,QAAM,CAACC,MAAD,EAAS;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAT,IAA4BZ,WAAW,CAACG,eAAD,EAAkB;AAC3DU,IAAAA,SAAS,EAAER,MADgD;AAE3DS,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEd;AAAR,KAAD;AAF2C,GAAlB,CAA7C;;AAIA,iBAAee,YAAf,CAA4BC,CAA5B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;;AACA,UAAMC,GAAG,GAAG,MAAMT,MAAM,EAAxB,CAH0B,CAI1B;;AACAH,IAAAA,SAAS;AACZ;;AACD,QAAMa,KAAK,GAAG,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,qCAAAA,IAAI,CAAEU,4BAAN,gFAAoCC,UAApC,MAAmD,uCAAnD,GAA6FX,IAA7F,aAA6FA,IAA7F,uBAA6FA,IAAI,CAAEU,4BAAnG,GAAkIE,SAAhJ;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEP,YAA9B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEI;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,WAAW,EAAC,2BAA7C;AAA0D,UAAA,YAAY,EAAC,OAAvE;AAA+E,UAAA,KAAK,EAAEf,MAAM,CAACG,KAA7F;AAAoG,UAAA,QAAQ,EAAEF;AAA9G;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,wEAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,WAAW,EAAC,sCAAnD;AAA4D,UAAA,YAAY,EAAC,UAAzE;AAAoF,UAAA,KAAK,EAAED,MAAM,CAACI,QAAlG;AAA4G,UAAA,QAAQ,EAAEH;AAAtH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlCD;;AAoCA,eAAeF,MAAf","sourcesContent":["import Form from './styles/Form'\r\nimport useForm from '../lib/useForm'\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CURRENT_USER_QUERY } from './User'\r\nimport Error from './ErrorMessage'\r\n\r\nconst SIGNIN_MUTATION = gql`\r\nmutation SIGNIN_MUTATION($email: String!, $password: String!){\r\n    authenticateUserWithPassword(email: $email, password: $password){\r\n        ... on UserAuthenticationWithPasswordSuccess{\r\n            item{\r\n                id\r\n                email\r\n                name\r\n            }\r\n        }\r\n        ... on UserAuthenticationWithPasswordFailure{\r\n            code\r\n            message\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nconst SignIn = () => {\r\n    const { inputs, handleChange, resetForm } = useForm({\r\n        email: '',\r\n        password: '',    \r\n    })\r\n    const [signin, {data, loading}] = useMutation(SIGNIN_MUTATION, {\r\n        variables: inputs,\r\n        refetchQueries: [{query: CURRENT_USER_QUERY}]\r\n    })\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        // Send the email and password to the\r\n        const res = await signin() \r\n        // console.log(res)\r\n        resetForm()\r\n    }\r\n    const error = data?.authenticateUserWithPassword?.__typename === 'UserAuthenticationWithPasswordFailure' ? data?.authenticateUserWithPassword : undefined\r\n    return (\r\n        <Form method='post' onSubmit={handleSubmit}>\r\n            <h2>Войдите в ваш аккаунт</h2>\r\n            <Error error={error} />\r\n            <fieldset>\r\n                <label htmlFor='email'>\r\n                    Email\r\n                    <input type='email' name='email' placeholder='Ваш E-mail' autoComplete='email' value={inputs.email} onChange={handleChange}/>\r\n                </label>\r\n                <label htmlFor='password'>\r\n                    Пароль\r\n                    <input type='password' name='password' placeholder='Пароль' autoComplete='password' value={inputs.password} onChange={handleChange} />\r\n                </label>\r\n                <button type='submit'>Войти</button>\r\n            </fieldset>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n"]},"metadata":{},"sourceType":"module"}