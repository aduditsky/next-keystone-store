{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\components\\\\DeleteProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nconst DELETE_PRODUCT_MUTATION = gql`\n    mutation DELETE_PRODUCT_MUTATION($id: ID!){\n        deleteProduct(id: $id){\n            id\n            name\n        }\n    }\n`;\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log('Функция обновления кэша после удаления товара');\n  cache.evict(cache.identify(payload.data.deleteProduct));\n}\n\nconst DeleteProduct = ({\n  id,\n  children\n}) => {\n  const [deleteProduct, {\n    loading\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    },\n    update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm('Точно нужно удалить?')) {\n        console.log(`${id} удален`);\n        deleteProduct(id).catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\nexport default DeleteProduct;","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/DeleteProduct.js"],"names":["useMutation","gql","React","DELETE_PRODUCT_MUTATION","update","cache","payload","console","log","evict","identify","data","deleteProduct","DeleteProduct","id","children","loading","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,uBAAuB,GAAGF,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASG,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,aAA5B,CAAZ;AACH;;AAED,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAD,KAAoB;AACtC,QAAM,CAACH,aAAD,EAAgB;AAAEI,IAAAA;AAAF,GAAhB,IAA+BhB,WAAW,CAACG,uBAAD,EAA0B;AACtEc,IAAAA,SAAS,EAAE;AACPH,MAAAA;AADO,KAD2D;AAItEV,IAAAA;AAJsE,GAA1B,CAAhD;AAOA,sBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEY,OAAhC;AAAyC,IAAA,OAAO,EAAE,MAAM;AACpD,UAAIE,OAAO,CAAC,sBAAD,CAAX,EAAqC;AACjCX,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEM,EAAG,SAAlB;AACAF,QAAAA,aAAa,CAACE,EAAD,CAAb,CAAkBK,KAAlB,CAAwBC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAApC;AACH;AACJ,KALD;AAAA,cAMKP;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlBD;;AAoBA,eAAeF,aAAf","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag'\r\nimport React from 'react'\r\n\r\nconst DELETE_PRODUCT_MUTATION = gql`\r\n    mutation DELETE_PRODUCT_MUTATION($id: ID!){\r\n        deleteProduct(id: $id){\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nfunction update(cache, payload) {\r\n    console.log(payload)\r\n    console.log('Функция обновления кэша после удаления товара')\r\n    cache.evict(cache.identify(payload.data.deleteProduct))\r\n}\r\n\r\nconst DeleteProduct = ({id, children}) => {\r\n    const [deleteProduct, { loading }] = useMutation(DELETE_PRODUCT_MUTATION, {\r\n        variables: {\r\n            id\r\n        },\r\n        update\r\n    })\r\n\r\n    return (\r\n        <button type='button' disabled={loading} onClick={() => {\r\n            if( confirm('Точно нужно удалить?')) {\r\n                console.log(`${id} удален`)\r\n                deleteProduct(id).catch(err => alert(err.message))\r\n            }\r\n        }}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteProduct\r\n"]},"metadata":{},"sourceType":"module"}