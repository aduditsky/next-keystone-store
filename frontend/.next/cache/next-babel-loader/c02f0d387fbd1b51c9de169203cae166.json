{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adudi\\\\[nextjs]NargoreShop\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!){\n        Product(where: {id: $id}){\n            id\n            name\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION(\n        $id: ID!\n        $name: String\n        $description: String\n        $price: Int\n    ){\n        UpdateProduct(\n            id: $id,\n            data: {\n                id: $id,\n                name: $name,\n                description: $description,\n                price: $price,\n            }\n        ){\n            id\n            name\n            description\n            price\n        }\n    }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  // 1. Получить сущевствующий товар\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this); // 2. Получить зависимость для обновления товара\n\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    }\n  }); // 2.5 Создать импорт useForm\n\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.Product); // 3. Нужно форму, что отслеживает обновления товара\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault(); // TODO: Handle Submit\n      // const res = await createProduct()\n      // clearForm()\n      // //Go to that product's page\n      // Router.push({\n      //     pathname: `/product/${res.data.createProduct.id}`,\n      // })\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"\\u0426\\u0435\\u043D\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"\\u0426\\u0435\\u043D\\u0430\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"number\",\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"\\u0411\\u0430\\u0437\\u043E\\u0432\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/adudi/[nextjs]NargoreShop/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","updateError","updateLoading","inputs","handleChange","clearForm","resetForm","Product","e","preventDefault","name","price","description"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\"\r\nimport gql from \"graphql-tag\"\r\nimport useForm from \"../lib/useForm\"\r\nimport DisplayError from \"./ErrorMessage\"\r\nimport Form from \"./styles/Form\"\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n    query SINGLE_PRODUCT_QUERY($id: ID!){\r\n        Product(where: {id: $id}){\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n    mutation UPDATE_PRODUCT_MUTATION(\r\n        $id: ID!\r\n        $name: String\r\n        $description: String\r\n        $price: Int\r\n    ){\r\n        UpdateProduct(\r\n            id: $id,\r\n            data: {\r\n                id: $id,\r\n                name: $name,\r\n                description: $description,\r\n                price: $price,\r\n            }\r\n        ){\r\n            id\r\n            name\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\n\r\nexport default function UpdateProduct({id}) {\r\n    // 1. Получить сущевствующий товар\r\n    const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n        variables: {id},\r\n    })\r\n\r\n    if (loading) return <p>Загружаю...</p>\r\n\r\n    // 2. Получить зависимость для обновления товара\r\n    const [updateProduct, {data: updateData, error: updateError, loading: updateLoading}] = useMutation(UPDATE_PRODUCT_MUTATION, {\r\n        variables: {\r\n            id\r\n        }\r\n    })\r\n    // 2.5 Создать импорт useForm\r\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product)\r\n    // 3. Нужно форму, что отслеживает обновления товара\r\n    return (\r\n        <Form onSubmit={ async (e) => {\r\n            e.preventDefault()\r\n            // TODO: Handle Submit\r\n\r\n\r\n            // const res = await createProduct()\r\n            // clearForm()\r\n            // //Go to that product's page\r\n            // Router.push({\r\n            //     pathname: `/product/${res.data.createProduct.id}`,\r\n            // })\r\n\r\n        }}>\r\n            <DisplayError error={error || updateError} />\r\n            <fieldset disabled={updateLoading} aria-busy={updateLoading}>\r\n                <label htmlFor='name'>\r\n                    Название\r\n                    <input type='text' id='name' name='name' placeholder='Имя' value={inputs.name} onChange={handleChange}/>\r\n                </label>\r\n                <label htmlFor='price'>\r\n                    Цена\r\n                    <input type='number' id='price' name='price' placeholder='Цена' value={inputs.price} onChange={handleChange}/>\r\n                </label>\r\n                <label htmlFor='description'>\r\n                    Описание\r\n                    <textarea type='number' id='description' name='description' placeholder='Базовое описание' value={inputs.description} onChange={handleChange} />\r\n                </label>\r\n\r\n                {/* <button type='button' onClick={clearForm}>Очистить</button>\r\n                <button type='button' onClick={resetForm}>Вернуть</button> */}\r\n\r\n                <button type='submit'>Изменить товар</button>\r\n            </fieldset>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}